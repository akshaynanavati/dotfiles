# Show git branch in prompt
source ~/.bash_profile_shared
source ~/.git_prompt
source ~/.git_completion.sh
source ~/.fab_completion
source ~/.ssh_completion

# Returns "*" if the current git branch is dirty.
function parse_git_dirty {
  [[ $(git diff --shortstat 2> /dev/null | tail -n1) != "" ]] && echo "*"
}

# Returns "|shashed:N" where N is the number of stashed states (if any).
function parse_git_stash {
  local stash=`expr $(git stash list 2>/dev/null| wc -l)`
  if [ "$stash" != "0" ]
  then
    echo "|stashed:$stash"
  fi
}

###Change the terminal prompt
PS1="[Exit: \[\033[1;31m\]\${PIPESTATUS[@]/#0/\[\033[0m\]\[\033[1;32m\]0\[\033[1;31m\]}\[\033[0m\]] \[\e[0m\]\[\e[0;34m(\$(__git_ps1)\$(parse_git_dirty)\$(parse_git_stash))\[\e[0m\]\n\T (\[\e[33m\]\u\[\e[0m\]:\[\e[32m\]\$(_dir_chomp 20)\[\e[0m\])\$ "


# git aliases
alias gashd='git stash drop'
alias gbr='g br'
alias gcob='gco -b'
alias glg='git log --graph'
alias gln='git log --stat --graph'
alias glno='git log --name-only'
alias gr='git reset --'
alias grh='git reset --hard'
alias grs='git reset --soft'
alias grv='git remote -v'
gnf () { gcob $1 && git fetch && git reset --hard origin/master; }
gcpl () { gco $1 && git pull; }

# vagrant aliases
alias v='vagrant'
alias vup='vagrant up && vagrant ssh'
alias vs='vagrant suspend'
alias vssh='vagrant ssh'

